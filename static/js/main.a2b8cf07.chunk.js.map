{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","start","end","Math","round","duration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAGMA,EACC,mCADDA,EAEE,2CAuFOC,MApFf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,KA6Bb,OACE,yBAAKC,UAAmC,oBAAhBF,EAAQG,KAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAa,WAAc,OAC5G,8BACE,yBAAKF,UAAU,cACb,2BACEG,KAAK,OACLH,UAAU,aACVI,YAAY,sBACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAlCK,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,UA8BW,oBAAhBlB,EAAQG,KACf,6BACE,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,YAAYF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,SACvD,yBAAKrB,UAAU,QA7BP,SAACsB,GACnB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAoBDE,CAAY,IAAIC,QAgBzC,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CACEiC,MAAO,EACPC,IAAKC,KAAKC,MAAMtC,EAAQG,KAAKC,MAC7BmC,SAAU,OAJd,SAOA,yBAAKrC,UAAU,WAAWF,EAAQA,QAAQ,GAAGG,QAO9C,MC/EbqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a2b8cf07.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nconst api = {\r\n  key: \"6abb310ba447c57363a8b0f88e979268\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n};\r\n\r\nfunction App() {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('');\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n  };\r\n\r\n  return (\r\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app cold') : 'app'}>\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search... city name\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n          />\r\n        </div>\r\n        {(typeof weather.main != \"undefined\") ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\r\n              <div className=\"date\">{dateBuilder(new Date())}</div>\r\n              {/* <label className=\"mTemp\">Minimum Temperature:\r\n                                    <CountUp\r\n                                    start={0}\r\n                                    end={Math.round(weather.main.temp_min)}\r\n                                    duration={2.75}\r\n                                />°c\r\n                                </label>\r\n                            <label className=\"mTemp\">Maximum Temperature:\r\n                                    <CountUp\r\n                                    start={0}\r\n                                    end={Math.round(weather.main.temp_min)}\r\n                                    duration={2.75}\r\n                                />°c\r\n                                </label> */}\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"temp\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={Math.round(weather.main.temp)}\r\n                  duration={2.75}\r\n                />°c\r\n                            </div>\r\n              <div className=\"weather\">{weather.weather[0].main}</div>\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        ) : ('')}\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}